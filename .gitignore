# IDE files
/.idea/
*.iml

# Generated files
*.csv
*.json
*.pyc
artifacts/
TestResults/
testResults/
*.pdf
change_version_tracker.json
node_modules/

# Distribution / packaging
dist/


# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# Unit test / coverage reports
.pytest_cache/

# mypy
.mypy_cache/
mypy.xml


# Unit test / coverage reports
.coverage
.coverage.*

# Environments
.env
.venv
env/
venv/
ENV/

.python-version

*.log

# Terraform
# Local .terraform directories
**/.terraform/*
!**/modules/*
# .tfstate files
*.tfstate
*.tfstate.*


# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version
# control as they are data points which are potentially sensitive and subject
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc
**/.ipynb_checkpoints/*


# Bulk load related
.packages/
.working/
